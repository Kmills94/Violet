// <auto-generated />
using DotNetCore2.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DotNetCore2.EF.Migrations
{
    [DbContext(typeof(CoreContext))]
    partial class CoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotNetCore2.Model.Entities.CoreClaim", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid>("CreatedById");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2500)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(2500)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("DotNetCore2.Model.Entities.CoreUser", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid>("CreatedById");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(2500)");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<Guid>("ModifiedById");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(2500)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(2500)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DotNetCore2.Model.Entities.CoreUserClaim", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("ClaimId");

                    b.HasKey("UserId", "ClaimId");

                    b.HasIndex("ClaimId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("DotNetCore2.Model.Entities.CoreClaim", b =>
                {
                    b.HasOne("DotNetCore2.Model.Entities.CoreUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DotNetCore2.Model.Entities.CoreUser", b =>
                {
                    b.HasOne("DotNetCore2.Model.Entities.CoreUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DotNetCore2.Model.Entities.CoreUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DotNetCore2.Model.Entities.CoreUserClaim", b =>
                {
                    b.HasOne("DotNetCore2.Model.Entities.CoreClaim", "Claim")
                        .WithMany("UserClaims")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DotNetCore2.Model.Entities.CoreUser", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
